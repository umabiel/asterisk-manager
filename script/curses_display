#!/usr/bin/env ruby
require 'curses'
require File.expand_path(File.join(File.dirname(__FILE__), '..', 'lib', 'asterisk-manager'))
include AsteriskManager

connection = Connection.new host:     ARGV[0],
                            port:     ARGV[1],
                            username: ARGV[2],
                            password: ARGV[3]
connection.login

event_listener = EventListener.new connection: connection
event_listener.listen

channel_event_poller = ChannelEventPoller.new connection: connection
channel_event_poller.subscribe event_listener
channel_event_poller.poll

channel_event_observer = ChannelEventObserver.new
channel_event_observer.subscribe event_listener

call_event_observer = CallEventObserver.new
call_event_observer.subscribe event_listener

Curses.init_screen
loop do
  lines = []
  # Channels
  width   = 180
  columns = 6
  channels  = []
  channels << [ 'Unique ID', 'SIP ID', 'State', 'Caller ID', 'Application', 'Duration' ]
  channels << [ '-' * width ]
  Channel.channels.values.each do |channel|
    channels << [ channel.unique_id, channel.sip_id, channel.state, channel.caller_id, channel.application, channel.duration ]
  end
  channels.collect! do |line|
    line.collect! do |column|
      column.to_s.rjust(width / columns)
    end
    line.join
  end
  lines += [ 'Channels'.center(width, '-') ] + channels

  # Calls
  width   = 180
  columns = 5
  calls  = []
  calls << [ 'Channel 1 Unique ID', 'Channel 1 SIP ID', 'Channel 2 Unique ID', 'Channel 2 SIP ID', 'Duration' ]
  calls << [ '-' * width ]
  Call.calls.values.each do |call|
    calls << [ call.channel_1.unique_id, call.channel_1.sip_id, call.channel_2.unique_id, call.channel_2.sip_id, call.duration ]
  end
  calls.collect! do |line|
    line.collect! do |column|
      column.to_s.rjust(width / columns)
    end
    line.join
  end
  lines += [ 'Calls'.center(width, '-') ] + calls

  # Conferences
  width   = 180
  columns = 2
  conferences  = []
  conferences << [ 'Name', 'Members' ]
  conferences << [ '-' * width ]
  Conference.conferences.values.each do |conference|
    conferences << [ conference.name, conference.channels.collect(&:caller_id_number) ]
  end
  conferences.collect! do |line|
    line.collect! do |column|
      column.to_s.rjust(width / columns)
    end
    line.join
  end
  lines += [ 'Conferences'.center(width, '-') ] + conferences

  Curses.clear
  Curses.noecho
  Curses.addstr(lines.join("\n"))
  Curses.refresh
  sleep 0.1
end
